import random
from collections import Counter
import getpass
import os
import sys
from code import code
from compare import player
#(R)ed, (B)lue, (G)reen, (Y)ellow, (M)agenta, or (C)yan.

#This list holds all the available colours
colours = ['R', 'B', 'G', 'Y', 'M', 'C'] 

class gamePrefix():
    def __init__(self,lengthPegs,trylength):
        self.trylength=trylength
        self.PegLength= lengthPegs
        





class game(code,gamePrefix):
    def __init__(self, lengthPegs,trylength):
        gamePrefix.__init__(self,lengthPegs,trylength)


    

    
    
    # 4 player game
    def mastermind4playerComputer(self):
        print("welcome to 4 player vs computer/n")
        player_1 = player(4)
        # player_1.get_players(4)
        #len of pegs
        PegLength = self.PegLength
        trylength = self.trylength

        # Auto generating the code
        solution_code = code.code_generator(self,PegLength)
        print("Computer code generated successfully/n/n")

        for x in range(0,4):



            print("Welcome to MasterMind", player_1.p[x])
            
            # creating  attempts for the 2nd player to guess
            for i in range(1, trylength+1):
                if (code.compute(self,player_1.p[x],i, trylength,x,3,solution_code,PegLength))=='discontinue':
                    break
        

    
    # 4 player with computer
    def mastermind4player(self):
        print("Welcome to the Mindmaster for 4 Players ")
        player_1 = player(4)
        # player_1.get_players(4)
        lengthPegs = self.PegLength
        trylength = self.trylength

        print("\n\n Welcome  ", player_1.p[0] )

        #getting code from the mastermind class
        solution_code = code.get_code(self,lengthPegs) 
        if solution_code != 'X':
            

            for x in range(1,4):
                print(player_1.p[x],' Your turn to crack The code')



                print("Welcome to MasterMind", player_1.p[x])
                
                # creating 12 attempts for the  player to guess
                for i in range(1, trylength+1):
                    if (code.compute(self,player_1.p[x],i, trylength,x,3,solution_code,lengthPegs))=='discontinue':
                        break
                

        else:
            solution_code = code.get_code(self,lengthPegs)

        

            
    
    
    
    
    def mastermind2(self):
        print("Welcome to MasterMind for two players\n")

        player_1 = player(2)
        # player_1.get_players(2)
        lengthPegs = self.PegLength
        
        trylength = self.trylength

        print("\n\n Welcome", player_1.p[0] )

        #getting code from the mastermind class
        solution_code = code.get_code(self,lengthPegs) 
        if solution_code != 'X':


            print("Welcome to Matermind", player_1.p[1], "\n\n")
            
            # creating attempts for the  player to guess
            for i in range(1, trylength+1):
                if (code.compute(self,player_1.p[1],i, trylength,1,1,solution_code,lengthPegs))=='discontinue':
                    break

        else:
            solution_code = code.get_code(self,lengthPegs)
            
            


    def mastermind1(self):
        print("Welcome to the MasterMind for 1 palyer")
        lengthPegs = self.PegLength
        trylength = self.trylength

        player_1 = player(1)
        # player_1.get_players(1)
        print("Welcome,", player_1.p[0] )

           

        # Auto generating the code
        solution_code = code.code_generator(self,lengthPegs)
        print("\n\n",lengthPegs,"  peg code Generated by computer Successfully")

        # Giving the player  attempts to guess the code
        for i in range(1, trylength+1):
            if (code.compute(self,player_1.p[0],i, trylength,1,1,solution_code,lengthPegs))=='discontinue':
                break



